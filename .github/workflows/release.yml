name: Go Multi-Platform Release

on:
  push:
    #branches:
    #  - main
    tags:
      - "v*.*.*"     # 打 tag 自动发布
  workflow_dispatch:   # 手动触发

permissions:
  contents: write      # 创建 Release 权限

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux]
        goarch: [amd64, arm64, arm]
        goarm: [5, 6, 7, 8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build binary
        run: |
          mkdir -p dist
          BIN_NAME=ws-proxy-client
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          echo "Building $BIN_NAME for ${{ matrix.goos }}/${{ matrix.goarch }}"
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -o dist/${BIN_NAME}-${{ matrix.goos }}-${{ matrix.goarch }}${EXT} main.go
          ls -l dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all build artifacts
        uses: actions/download-artifact@v5
        with:
          path: release
          merge-multiple: true   # 自动合并所有平台的产物

      - name: Show release files
        run: ls -l release

      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
